name: main

on: push


jobs:
  build:
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    env:
      ORG_GRADLE_PROJECT_githubUser: x-access-token
      ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
      - name: Checkout code
        uses: actions/checkout@master
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v2
      - name: Setup gradle dependency cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run lint
        run: |
          ./gradlew --continue ktlintCheck
      - name: Run tests
        run: |
          ./gradlew test
      - name: Build jar
        run: |
          ./gradlew shadowJar -x test
      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.1.1'
      - name: Verify distroless base image
        run: |
          cosign verify gcr.io/distroless/java17  --certificate-oidc-issuer https://accounts.google.com --certificate-identity keyless@distroless.iam.gserviceaccount.com
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        if: (!startsWith(github.ref_name, 'dependabot'))
        with:
          team: teamsykefravr
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ github.sha }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    if: github.ref == 'refs/heads/master'
    name: Deploy to NAIS Dev-gcp
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/naiserator-dev.yaml
          VAR: image=${{ needs.build.outputs.image }}
